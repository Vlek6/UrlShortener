name: CI Pipeline

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository code
      - name: Check out code
        uses: actions/checkout@v3

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      # Step 3: Cache Poetry dependencies
      - name: Cache Poetry dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pypoetry
            ~/.cache/pip
            ~/.virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      # Step 4: Install Poetry
      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      # Step 5: Install project dependencies
      - name: Install dependencies with Poetry
        working-directory: ./backend
        run: |
          poetry config virtualenvs.create false
          poetry install --no-interaction --no-ansi

      # Step 6: Run Ruff for linting and formatting
      - name: Lint and Format with Ruff
        working-directory: ./backend
        run: |
          poetry run ruff check . --fix

        #      # Step 7: Run tests with Pytest
        #      - name: Run Tests
        #        working-directory: ./backend
        #        run: poetry run pytest
